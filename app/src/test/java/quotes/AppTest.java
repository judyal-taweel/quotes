/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;


import java.io.Reader;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }

    @Test void test() throws IOException {

        try {
            Reader reader = Files.newBufferedReader(Paths.get("app/src/main/java/gson/recentquotes.json"));
            Gson gson = new Gson();
            List<Quotes> users = new Gson().fromJson(reader, new TypeToken<List<Quotes>>() {}.getType());

            assertEquals("Marilyn Monroe", users.get(0).getAuthor());
            assertEquals("I am good, but not an angel. I do sin, but I am not the devil. I am just a small girl in a big world trying to find someone to love.", users.get(0).getText());

        }catch (Exception ex){
            ex.printStackTrace();
        }



    }
    String API_URL="http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
    String path = "C:\\Users\\LENOVO\\Documents\\lab401\\quotes\\app\\src\\main\\java\\gson\\recentquotes.json";
    QoutesServeces test = new QoutesServeces();
    @Test
    public void testSetConnectionAPI() throws IOException {


//       assertEquals("sun.net.www.protocol.http.HttpURLConnection:"+API_URL,test.setConnectionAPI(API_URL));
        assertTrue(test.setConnectionAPI(API_URL)==200);
    }
    @Test
    public void testSavingGson()throws IOException{
        test.setConnectionAPI(API_URL);
        assertFalse(test.setApiGson(path)==true);
    }
    @Test
    public void testBackUp()throws IOException{
        assertTrue(test.ifConnectionWentWrong(path));
    }
}
